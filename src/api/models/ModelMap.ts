/* tslint:disable */
/* eslint-disable */
/**
 * BasicGameBackend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Play } from './Play';
import {
    PlayFromJSON,
    PlayFromJSONTyped,
    PlayToJSON,
    PlayToJSONTyped,
} from './Play';

/**
 * 
 * @export
 * @interface ModelMap
 */
export interface ModelMap {
    /**
     * 
     * @type {string}
     * @memberof ModelMap
     */
    id: string | null;
    /**
     * 
     * @type {number}
     * @memberof ModelMap
     */
    authorTime?: number;
    /**
     * 
     * @type {number}
     * @memberof ModelMap
     */
    sPlusTime?: number;
    /**
     * 
     * @type {number}
     * @memberof ModelMap
     */
    sTime?: number;
    /**
     * 
     * @type {number}
     * @memberof ModelMap
     */
    aTime?: number;
    /**
     * 
     * @type {number}
     * @memberof ModelMap
     */
    bTime?: number;
    /**
     * 
     * @type {Array<Play>}
     * @memberof ModelMap
     */
    leaderboard?: Array<Play> | null;
}

/**
 * Check if a given object implements the ModelMap interface.
 */
export function instanceOfModelMap(value: object): value is ModelMap {
    if (!('id' in value) || value['id'] === undefined) return false;
    return true;
}

export function ModelMapFromJSON(json: any): ModelMap {
    return ModelMapFromJSONTyped(json, false);
}

export function ModelMapFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModelMap {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'authorTime': json['authorTime'] == null ? undefined : json['authorTime'],
        'sPlusTime': json['sPlusTime'] == null ? undefined : json['sPlusTime'],
        'sTime': json['sTime'] == null ? undefined : json['sTime'],
        'aTime': json['aTime'] == null ? undefined : json['aTime'],
        'bTime': json['bTime'] == null ? undefined : json['bTime'],
        'leaderboard': json['leaderboard'] == null ? undefined : ((json['leaderboard'] as Array<any>).map(PlayFromJSON)),
    };
}

export function ModelMapToJSON(json: any): ModelMap {
    return ModelMapToJSONTyped(json, false);
}

export function ModelMapToJSONTyped(value?: ModelMap | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'authorTime': value['authorTime'],
        'sPlusTime': value['sPlusTime'],
        'sTime': value['sTime'],
        'aTime': value['aTime'],
        'bTime': value['bTime'],
        'leaderboard': value['leaderboard'] == null ? undefined : ((value['leaderboard'] as Array<any>).map(PlayToJSON)),
    };
}

