set dotenv-load := true

copy-files:
  cp -r ./build/* ../wasmComp
  cp -r ./build2/* ../../../static
  cp -r ./geodesics/build/bin/* ../../../src/geodesics/
  cp -r ./geodesics/build/bin/* ../../../static/

bindgen:
  wasm-bindgen ./target/wasm32-unknown-unknown/release/bridge2.wasm --target web --remove-producers-section --out-dir ./build
  wasm-bindgen ./target/wasm32-unknown-unknown/release/conduit_particles.wasm --target web --remove-producers-section --out-dir ./build
  wasm-bindgen ./target/wasm32-unknown-unknown/release/cave.wasm --target web --remove-producers-section --out-dir ./build
  wasm-bindgen ./target/wasm32-unknown-unknown/release/stone.wasm --target web --remove-producers-section --out-dir ./build

  cp ./target/wasm32-unknown-unknown/release/normal_map_gen.wasm ./build2
  cp ./target/wasm32-unknown-unknown/release/texture_crossfade.wasm ./build2
  cp ./target/wasm32-unknown-unknown/release/point_distribute.wasm ./build2
  cp ./target/wasm32-unknown-unknown/release/terrain.wasm ./build2

opt:
  wasm-opt ./build/bridge2_bg.wasm -g -O4 --enable-simd --enable-nontrapping-float-to-int --precompute-propagate --fast-math --detect-features --strip-dwarf -c -o ./build/bridge2_bg.wasm
  wasm-opt ./build/conduit_particles_bg.wasm -g -O4 --enable-simd --enable-nontrapping-float-to-int --precompute-propagate --fast-math --detect-features --strip-dwarf -c -o ./build/conduit_particles_bg.wasm
  wasm-opt ./build2/normal_map_gen.wasm -g -O4 --enable-simd --enable-nontrapping-float-to-int --precompute-propagate --fast-math --detect-features --strip-dwarf -c -o ./build2/normal_map_gen.wasm
  wasm-opt ./build2/texture_crossfade.wasm -g -O4 --enable-simd --enable-nontrapping-float-to-int --precompute-propagate --fast-math --detect-features --strip-dwarf -c -o ./build2/texture_crossfade.wasm
  wasm-opt ./build2/point_distribute.wasm -g -O4 --enable-simd --enable-nontrapping-float-to-int --precompute-propagate --fast-math --detect-features --strip-dwarf -c -o ./build2/point_distribute.wasm
  wasm-opt ./build/cave_bg.wasm -g -O4 --enable-simd --enable-nontrapping-float-to-int --precompute-propagate --fast-math --detect-features --strip-dwarf -c -o ./build2/cave_bg.wasm
  wasm-opt ./build2/terrain.wasm -g -O4 --enable-simd --enable-nontrapping-float-to-int --precompute-propagate --fast-math --detect-features --strip-dwarf -c -o ./build2/terrain.wasm
  wasm-opt ./build/stone_bg.wasm -g -O4 --enable-simd --enable-nontrapping-float-to-int --precompute-propagate --fast-math --detect-features --strip-dwarf -c -o ./build/stone_bg.wasm
  wasm-opt ./geodesics/build/bin/geodesics.wasm -g -O4 --enable-simd --enable-nontrapping-float-to-int --precompute-propagate --fast-math --detect-features --strip-dwarf -c -o ./geodesics/build/bin/geodesics.wasm

build:
  #!/bin/bash

  rm -rf ./build/*
  RUSTFLAGS="-Ctarget-feature=+simd128" cargo build --release --target wasm32-unknown-unknown --workspace

  just bindgen
  just build-geodesics
  just opt
  just copy-files

clean:
  rm -rf build/*
  rm -rf build2/*
  cd ./geodesics && just clean

build-geodesics:
  #!/bin/bash

  set -e

  cd ./geodesics
  echo "fetch submodules if ./deps/geometry-central/README.md doesn't exist" > /dev/null
  if [ ! -f ./deps/geometry-central/README.md ]; then
    echo "fetching submodules"
    git submodule update --init --recursive
  fi

  echo "need to do full build with CMake if ./build/CMakeCache.txt doesn't exist" > /dev/null
  if [ ! -f ./build/CMakeCache.txt ]; then
    echo "doing full build with CMake"
    just build-all
  else
    just build
  fi

debug:
  cargo build --target wasm32-unknown-unknown --workspace

  just bindgen
  just opt
  just copy-files
